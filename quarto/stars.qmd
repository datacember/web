---
title: "Stars"
editor: visual
format: 
  html:
    toc: true
    number-sections: true
---

## Stars

Stars are some of the universe's most fascinating objects, each one a unique result of complex physical phenomena. They come in all shapes, sizes, and types, from massive blue supergiants to dim red dwarfs. 
Every star holds a story, revealing secrets about its age, temperature, luminosity, and the elemental alchemy that forged it billions of years ago. The hope is that it will be possible to identify the star type based on just these charectaristics.


## Data

Our data contains 241 entries, with each row representing one star. Every star in this dataset has the following key characteristics:

| Temperature | L (Luminosity) | R (Radius) | A_M (Absolute Magnitude) | Color | Spectral_Class | Type |

- **Temperature**: Surface temperature of the star.
- **L (Luminosity)**: Brightness of the star relative to the Sun.
- **R (Radius)**: Size of the star relative to the Sun.
- **A_M (Absolute Magnitude)**: A measure of the star’s brightness as observed from Earth.
- **Color**: Apparent color of the star, ranging from blue to red.
- **Spectral_Class**: Classification of the star based on its spectral lines (e.g., O, B, A, F, G, K, M).
- **Type**: The specific type/category of star based on its characteristics.

The aim here is to see if we can predict a star’s type just based on these physical attributes.

The type column indicates the type of star you are dealing with. 

**You can install the data <a href="https://www.github.com/datacemebr/stars">here</a>.**

## Fun Facts about Stars

1. **Stars Can "Sing"**: Stars can actually vibrate in ways that resemble sound waves, a field of study known as asteroseismology. These vibrations help astronomers learn about a star's internal structure.
   
2. **Stars Live (and Die) in Spectacular Fashion**: Massive stars end their lives in colossal supernova explosions, scattering elements throughout the cosmos—these elements eventually form planets and even life.

3. **The Sun is Average, But Essential**: Despite being a modestly sized, G-type main-sequence star, the Sun's stable energy output makes it perfect for sustaining life on Earth.

## Your Task

For your first task, we encourage you to select one of the options below. They range from simple to more advanced. You can read about what points are, and how they are calculated <a href='guide/points'> here</a>.

All these submissions require a report. You can refer to the report writing guide <a href="/guide/reports">here. </a>

### **Simple**: Star Charectaristics Report 
For this challenge import the data into your favourite software and have an explore of what the charectaristics of each class of star are. For your <a href="/guide/report"> report* </a> answer these questions:

- What are the average temperature, luminosity and Radius of a type 4 star? 

- Consider rows 46 and rows 32. How can you account for the fact that the larger star (type 4) is colder than a smaller star (type 3)?

- Produce a plot with two different variables, what trend does it show? (hint, plot size against Heat, are larger stars hotter?)

**Challenge Option**: Build a model that accurately predicts star type based on its characteristics. 


### **Medium**: Hertzsprung-Russell
Produce a Herzprung Russel Diagram of the data within the dataset.

- What features are left out of this diagram?

- Is there are clear distinction of the star types? Why not?

- Speculate on what specific areas of the diagram would a predictive model struggle to classify?

**<a href="https://en.wikipedia.org/wiki/Hertzsprung–Russell_diagram"> What is a Hertzsprung-Russell Diagram? </a>**
 
### **Complex**: Model Classification

Produce a Model that either uses regression or clustering to clasify star type. 

- What approach did you select? Clustering or Regression?

- What metrics did you use?

- What are any limitations of the model and how could they be overcome?

## Need a Hint?

If youre new to coding, you can filter a dataframe (csv object) using R Studio like this.
```{r data_loading_r, eval=FALSE, message=FALSE}
library(dplyr)

data = read.csv('stars.csv')

filtered_for_type_1 = data |> filter(type = 1)
```


In Python you can use the Pandas library for simmilar operations.

```{python data_loading_py_2, eval=FALSE, echo=TRUE}
import pandas as pd

stars = pd.read_csv('stars.csv')
stars = stars[stars['Type']==2]
```

For a no-code option you can use Excel.



